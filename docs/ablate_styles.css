body {
    margin: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* Consider min-height if content might be shorter than viewport */
    min-height: 100vh; /* Changed from height to min-height for flexibility */
    width: 100vw;
    background-color: #f0f0f0;
    /* padding-bottom: 200px; /* This might be very large, review if needed */
    box-sizing: border-box; /* Add for better padding/border behavior */
    padding: 20px; /* Example padding for body */
}

.coordinates {
    font-size: 5rem;
}

#bodytext {
    width: 90%; /* Use percentage for responsiveness */
    max-width: 40em; /* Keep max-width for readability */
    margin-left: auto;
    margin-right: auto;
    text-justify: auto; /* Note: text-justify is not a standard property, consider text-align: justify; */
    font-size: 1.2em;
    font-family: sans-serif;
}

h1, h2, h3 {
    font-family:serif;
}

/* Common container style - there were two definitions, consolidating */
.container {
    display: flex;
    flex-direction: column; /* This was in the second definition, seems important */
    width: 90%;
    /* height: 100%; /* Be cautious with fixed percentage heights without a fixed parent height */
    margin-left: auto;
    margin-right: auto;
}


.square, .image { /* .image class was defined but not used in the problem area, keeping for context */
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.square {
    background-color: #ddd;
    position: relative;
}

#network-diagram {
    background-color: #d0d0d0;
    overflow: auto;
    position: relative;
    flex: 2; /* This makes it take twice the space of a flex:1 sibling */
    height: 60vh;
    display: flex; /* Added display:flex to make align/justify work if it has direct children needing it */
    align-items: center;
    justify-content: center;
 }

 .node {
     fill: #69b3a2;
     stroke: #fff;
     stroke-width: 2px;
 }
 .link {
     stroke: #999;
     stroke-opacity: 0.6;
 }

/* Styles for the panel that contains the node information (image) */
.panel {
    overflow: auto; /* This makes the panel scrollable if its content overflows */
    flex: 1; /* Takes available space */
    display: flex;
    /* MODIFIED: Changed from center to flex-start */
    /* This ensures that if #node-info-content is wider than .panel, it aligns to the left */
    justify-content: flex-start;
    align-items: center; /* Vertically centers #node-info-content if it's shorter than .panel */
                            /* Consider 'flex-start' if you always want top alignment */
}

/* Styles for the node information container itself */
#node-info {
    flex: 1; /* Takes available space */
    background-color: #f0f0f0;
    height: 40vh; /* Fixed height for this container */
    /* If #node-info is meant to be the scrollable container instead of/in addition to .panel, it needs overflow and display:flex */
    display: flex; /* Ensuring it's a flex container for #node-info-content */
    overflow: auto; /* Ensuring it can scroll if its content is larger */
    /* MODIFIED: Added justify-content: flex-start if #node-info is the primary scroller */
    justify-content: flex-start;
    align-items: center; /* Or flex-start */
}

/* Styles for the content area within the node information panel (where the image is) */
#node-info-content {
    display: flex;
    /* MODIFIED: Changed from center to flex-start */
    /* This aligns the image to the left within this container */
    justify-content: flex-start;
    align-items: center; /* Vertically centers the image if it's shorter */
    text-align: left; /* Changed from center, aligns text if any */
    /* To ensure this container can grow as wide as the image: */
    /* min-width: max-content; /* Uncomment if image is not forcing width */
}

/* Styles for the image within the node information content area */
#node-info-content img {
    /* REMOVED: flex-basis: 90%; */
    /* This was making the image 90% of #node-info-content's width. */
    /* We want the image at its natural size or a controlled max-width. */

    /* MODIFIED: Removed horizontal margins that might push the image */
    margin: 0; /* Or use a smaller, consistent margin like 'auto' for centering if image is smaller than container */

    /* MODIFIED: Allow image to be its natural width, forcing scroll on parent */
    max-width: none;
    /* If you prefer the image to scale down to fit its container instead of scrolling, use: */
    /* max-width: 100%; */

    height: auto; /* Maintain aspect ratio */
    display: block; /* Ensures proper block-level behavior for the image */
}
 
#network-diagram svg {
    flex-shrink: 0; /* Prevent the SVG from shrinking */
    /* position: absolute; /* Be careful with absolute positioning inside flex/scroll containers */
    /* top: 0; */
    /* left: 0; */
    /* If the SVG is meant to be scrollable content within #network-diagram, relative positioning or static might be better */
}

/* Removed extra closing brace that was here */

